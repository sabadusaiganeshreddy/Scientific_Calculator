
import javax.swing.*; //for buttons
import javax.swing.border.BevelBorder;//for the border appearance
import java.awt.*;
import java.awt.event.*;
import java.util.*;

class Calculator {

    JFrame frmCalculator;
    String result="",expression="";//(to store the input);
    ArrayList<String> token=new ArrayList<>();

    boolean num=false;  //to see number or not
    boolean dot=false;

    public static void main(String[] args) {
        try {
            Calculator window = new Calculator();
            window.frmCalculator.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    Calculator() {
        initialize();
    }



    int precedence(String x)
    {
        return  switch (x) {
            case "+" -> 1;
            case "-" -> 2;
            case "x" -> 3;
            case "/" -> 4;
            case "^" -> 6;
            case "!" -> 7;
            default -> 10;
        };


    }

    //operator checking
    
    private boolean isOperator(String x)
    {
        return x.equals("+") || x.equals("-") || x.equals("x") || x.equals("/") || x.equals("sqrt") || x.equals("^") || x.equals("!") || x.equals("sin") || x.equals("cos") || x.equals("tan") || x.equals("ln") || x.equals("log");
    }

    private String infixToPostfix()
    {
        Stack<String> s=new Stack<>();
        
        String y;
        int flag;
        StringBuilder p= new StringBuilder();
        token.add(")");
        s.push("(");
        for(String i: token) {
            if(i.equals("(")){
                s.push(i);
            }else if(i.equals(")")){
                y=s.pop();
                while(!y.equals("("))
                {
                    p.append(y).append(",");
                    y=s.pop();
                }
            }else if(isOperator(i)){
                y=s.pop();
                flag=0;
                if(isOperator(y) && precedence(y)>precedence(i)){
                    p.append(y).append(",");
                    flag=1;
                }
                if(flag==0)
                    s.push(y);

                s.push(i);
            }else{
                p.append(i).append(",");
            }
        }
        while(!s.empty()) {
            y=s.pop();
            if(!y.equals("(") && !y.equals(")")) {
                p.append(y).append(",");
            }
        }
        return p.toString();
    }

    //factorial method
    private double factorial(double y) {
        double fact=1;
        if (y != 0 && y != 1) {
            for (int i = 2; i <= y; i++) {
                fact *= i;
            }
        }
        return fact;

    }

    //for actual calculation with binary operators
    private double calculate(double x,double y,String c)
    {
        return switch (c) {
            case "-" -> x - y;
            case "+" -> x + y;
            case "x" -> x * y;
            case "/" -> x / y;
            case "^" -> Math.pow(x, y);
            default -> 0;
        };
       
    }

    //calculation with unary operators
    private double calculate(double y,String c) {
        return switch (c) {
            case "log" -> Math.log10(y); //imported from math module
            case "sin" -> Math.sin(y);
            case "cos" -> Math.cos(y);
            case "tan" -> Math.tan(y);
            case "ln" -> Math.log(y);
            case "sqrt" -> Math.sqrt(y);
            case "!" -> factorial(y);
            default -> 0;
        };
       
    }

    private double Eval(String p)
    {
        String[] tokens = p.split(","); //p=postfix expression ,comma 2,+3,+4....
        ArrayList<String> token2=new ArrayList<>(); //storing token after splitting
        for (String string : tokens) {
            if (!string.isEmpty() && !string.equals(" ") && !string.equals("\n") && !string.equals("  ")) {
                token2.add(string);  // tokens from post fix form p actual tokens for calculation
            }
        }

        Stack<Double> s=new Stack<>(); //creating stack
        double x,y;
        for(String  i:token2) { //for loop used for array  for str i in token2
            if(isOperator(i)){ //checking whether operator or not
                //if it is unary operator or function
                if(i.equals("sin") ||i.equals("cos") ||i.equals("tan") ||i.equals("log") || i.equals("ln") || i.equals("sqrt") || i.equals("!")) {
                    y=s.pop(); //y  to store the deleted element
                    s.push(calculate(y,i)); //push into s stack //binary operators fn
                }else {
                    //for binary operators
                    y=s.pop();
                    x=s.pop();
                    s.push(calculate(x,y,i));
                }
            }else{
                if(i.equals("pi")) //i equals to pi or not
                    s.push(Math.PI);
                else if(i.equals("e"))
                    s.push(Math.E);
                else
                    s.push(Double.valueOf(i));
            }
        }
        double res=1;
        while(!s.empty()) {
            res*=s.pop();
        }
        return res;  //final result
    }

    //actual combined method for calculation
    private void calculateMain() {
        String[] tokens =expression.split(","); //user input in expression
        for (String s : tokens) {
            if (!s.isEmpty() && !s.equals(" ") && !s.equals("\n") && !s.equals("  ")) {
                token.add(s);  //adding token to token array list from expression
            }
        }
        try {
            double res = Eval(infixToPostfix());
            result= Double.toString(res); //result into string form
        }catch(Exception ignored) {}
    }


    //design of the frame with their action listener
    private void initialize() {
        frmCalculator = new JFrame();
        frmCalculator.setResizable(false);
        frmCalculator.setTitle("Calculator");
        frmCalculator.getContentPane().setBackground(new Color(172, 170, 255)); //get content pane: if we add objects to the frame
        frmCalculator.getContentPane().setFont(new Font("Calibre", Font.PLAIN, 15));
        frmCalculator.getContentPane().setForeground(SystemColor.windowBorder);
        frmCalculator.getContentPane().setLayout(null);

        JPanel textPanel = new JPanel(); 
        textPanel.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null)); //lowered-shadow, highlight inner color.outer colour,shadow inner outer
        textPanel.setBounds(34, 25, 316, 80); //x,y,width,height
        frmCalculator.getContentPane().add(textPanel);
        textPanel.setLayout(null); 

        
        JLabel expLabel = new JLabel("");
        expLabel.setBackground(SystemColor.control);
        expLabel.setFont(new Font("Yu Gothic UI Light", Font.PLAIN, 20));
        expLabel.setHorizontalAlignment(SwingConstants.RIGHT); //alignment of typing right bottom
        expLabel.setForeground(UIManager.getColor("Button.disabledForeground")); //color
        expLabel.setBounds(2, 2, 312, 27); //x,y,width,height
        textPanel.add(expLabel);

        JTextField textField = new JTextField();
        expLabel.setLabelFor(textField); //adding text field
        textField.setHorizontalAlignment(SwingConstants.RIGHT);
        textField.setBackground(SystemColor.control);
        textField.setEditable(false); //no edit
        textField.setText("0"); //initially 0
        textField.setBorder(null);
        textField.setFont(new Font("Yu Gothic UI Light", textField.getFont().getStyle(), 32));
        textField.setBounds(2, 30, 312, 49);
        textPanel.add(textField);
        textField.setColumns(10);

        JPanel buttonPanel = new JPanel();
        buttonPanel.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
        buttonPanel.setBackground(SystemColor.inactiveCaptionBorder);
        buttonPanel.setBounds(34, 120, 316, 322);
        frmCalculator.getContentPane().add(buttonPanel);
        buttonPanel.setLayout(new GridLayout(0, 5, 0, 0));

        //clear button
        JButton button1 = new JButton("C"); //event listener
        button1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                textField.setText("0");
                expLabel.setText("");
                expression ="";
                token.clear();
                result="";
                num=false;
                dot=false;
            }
        });
        button1.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button1);

        //delete button
        JButton button2 = new JButton("DEL");
        button2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String s=textField.getText(); //taking information from text field
                if(!Objects.equals(s, "0") && s.length() > 1) {
                    String newString = s.substring(0,s.length()-1); //last digit delete
                    textField.setText(newString);
                    if(expression.charAt(expression.length()-1)=='.') {
                        dot=false;
                    }
                    if(expression.charAt(expression.length()-1) == ',') {
                        expression = expression.substring(0,expression.length()-2);
                    }else {
                        expression = expression.substring(0,expression.length()-1);
                    }
                }else {
                    textField.setText("0");
                    expression="";
                }
            }
        });
        button2.setFont(new Font("Calibre Light", Font.PLAIN, 14));
        buttonPanel.add(button2);


        //button for constant pi
        JButton button3 = new JButton("<html><body><span>Ï€</span></body></html>"); //span:used to apply styles to specific part of text
        button3.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        button3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+ (char) 960);
                }else {
                    textField.setText(Character.toString((char)960)); //unicode value treats PI[unicode]
                }
                expression += ",pi";
                num=false;
                dot=false;
            }
        });
        buttonPanel.add(button3);

        //button for x^Y
        JButton button4 = new JButton("<html><body><span>X<sup>y</sup></span></body></html>");//sup=super script
        button4.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"^");
                    expression+=",^";
                }else {
                    textField.setText("0^");
                    expression += ",0,^";
                }
                num=false;
                dot=false;
            }
        });
        button4.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button4);

        //factorial button
        JButton button5 = new JButton("x!");
        button5.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"!");
                    expression+=",!";
                }else {
                    textField.setText("0!");
                    expression+=",0,!";
                }
                num=false;
                dot=false;
            }
        });
        button5.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button5);

        //button for sin
        JButton button6 = new JButton("sin");
        button6.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"sin(");
                }else {
                    textField.setText("sin(");
                }
                expression+=",sin,(";
                num=false;
                dot=false;
            }
        });
        button6.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button6);

        JButton button7 = new JButton("(");
        button7.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"(");
                }else {
                    textField.setText("(");
                }
                expression+=",(";
                num=false;
                dot=false;
            }
        });
        button7.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button7);

        JButton button8 = new JButton(")");
        button8.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+")");
                }else {
                    textField.setText(")");
                }
                expression+=",)";
                num=false;
                dot=false;
            }
        });
        button8.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button8);

        JButton button9 = new JButton("e");
        button9.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"e");
                }else {
                    textField.setText("e");
                }
                expression+=",e";
                num=false;
                dot=false;
            }
        });
        button9.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button9);

        //button for square root
        JButton button10 = new JButton("<html><body><span>âˆš</span></body></html>");
        button10.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+ (char) 8730);
                }else {
                    textField.setText(Character.toString((char)8730));
                }
                expression+=",sqrt";
                num=false;
                dot=false;
            }
        });
        button10.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button10);

        JButton button11 = new JButton("cos");
        button11.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"cos(");
                }else {
                    textField.setText("cos(");
                }
                expression+=",cos,(";
                num=false;
                dot=false;
            }
        });
        button11.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button11);

        JButton button12 = new JButton("7");
        button12.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"7");
                }else {
                    textField.setText("7");
                }
                if(num) {
                    expression+="7";
                }else {
                    expression+=",7";
                }
                num=true;
            }
        });
        button12.setBackground(new Color(220, 220, 220));
        button12.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button12);

        JButton button13 = new JButton("8");
        button13.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"8");
                }else {
                    textField.setText("8");
                }
                if(num) {
                    expression+="8";
                }else {
                    expression+=",8";
                }
                num=true;
            }
        });
        button13.setBackground(new Color(220, 220, 220));
        button13.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button13);

        JButton button14 = new JButton("9");
        button14.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"9");
                }else {
                    textField.setText("9");
                }
                if(num) {
                    expression+="9";
                }else {
                    expression+=",9";
                }
                num=true;
            }
        });
        button14.setBackground(new Color(220, 220, 220));
        button14.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button14);


        //button for division operator
        JButton button15 = new JButton("<html><body><span>Ã·</span></body></html>");
        button15.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String s=textField.getText();
                if(s.equals("0")) {
                    expression+="0";
                }
                if(s.charAt(s.length()-1)== '-' || s.charAt(s.length()-1)== 'x' || s.charAt(s.length()-1) == '+') {
                    String newString = s.substring(0,s.length()-1);
                    textField.setText(newString+ (char) 247);
                    expression = expression.substring(0,expression.length()-1);
                    expression += "/";
                }else if(s.charAt(s.length()-1)!= (char)247) {
                    textField.setText(s+ (char) 247);
                    expression+=",/";
                }else {
                    textField.setText(s);
                }
                num=false;
                dot=false;
            }
        });
        button15.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button15);

        JButton button16 = new JButton("tan");
        button16.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"tan(");
                }else {
                    textField.setText("tan(");
                }
                expression+=",tan,(";
                num=false;
                dot=false;
            }
        });
        button16.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button16);

        JButton button17 = new JButton("4");
        button17.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"4");
                }else {
                    textField.setText("4");
                }
                if(num) {
                    expression+="4";
                }else {
                    expression+=",4";
                }
                num=true;
            }
        });
        button17.setBackground(new Color(220, 220, 220));
        button17.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button17);

        JButton button18 = new JButton("5");
        button18.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"5");
                }else {
                    textField.setText("5");
                }
                if(num) {
                    expression+="5";
                }else {
                    expression+=",5";
                }
                num=true;
            }
        });
        button18.setBackground(new Color(220, 220, 220));
        button18.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button18);

        JButton button19 = new JButton("6");
        button19.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"6");
                }else {
                    textField.setText("6");
                }
                if(num) {
                    expression+="6";
                }else {
                    expression+=",6";
                }
                num=true;
            }
        });
        button19.setBackground(new Color(220, 220, 220));
        button19.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button19);

        JButton button20 = new JButton("x");
        button20.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {

                String s=textField.getText();
                if(s.equals("0")) {
                    expression+="0";
                }
                if(s.charAt(s.length()-1)== '-' || s.charAt(s.length()-1)== '+' || s.charAt(s.length()-1) == (char)(247)) {
                    String newString = s.substring(0,s.length()-1);
                    newString += "x";
                    textField.setText(newString);
                    expression = expression.substring(0,expression.length()-1);
                    expression += "x";
                }else if(s.charAt(s.length()-1)!= 'x') {
                    s += "x";
                    textField.setText(s);
                    expression+=",x";
                }else {
                    textField.setText(s);
                }
                num=false;
                dot=false;
            }
        });
        button20.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button20);

        JButton button21 = new JButton("ln");
        button21.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"ln(");
                }else {
                    textField.setText("ln(");
                }
                expression+=",ln,(";
                num=false;
                dot=false;
            }
        });
        button21.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button21);

        JButton button22 = new JButton("1");
        button22.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"1");
                }else {
                    textField.setText("1");
                }
                if(num) {
                    expression+="1";
                }else {
                    expression+=",1";
                }
                num=true;
            }
        });
        button22.setBackground(new Color(220, 220, 220));
        button22.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button22);

        JButton button23 = new JButton("2");
        button23.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"2");
                }else {
                    textField.setText("2");
                }
                if(num) {
                    expression+="2";
                }else {
                    expression+=",2";
                }
                num=true;
            }
        });
        button23.setBackground(new Color(220, 220, 220));
        button23.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button23);

        JButton button24 = new JButton("3");
        button24.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"3");
                }else {
                    textField.setText("3");
                }
                if(num) {
                    expression+="3";
                }else {
                    expression+=",3";
                }
                num=true;
            }
        });
        button24.setBackground(new Color(220, 220, 220));
        button24.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button24);

        JButton button25 = new JButton("-");
        button25.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String s=textField.getText();
                if(s.equals("0")) {
                    expression+="0";
                }
                if(s.charAt(s.length()-1)== '+') {
                    String newString = s.substring(0,s.length()-1);
                    newString += "-";
                    expression = expression.substring(0,expression.length()-1);
                    expression += "-";
                    textField.setText(newString);
                }else if(s.charAt(s.length()-1)!= '-') {
                    s += "-";
                    textField.setText(s);
                    expression += ",-";
                }else {
                    textField.setText(s);
                }
                num=false;
                dot=false;
            }
        });
        button25.setFont(new Font("Calibre Light", Font.BOLD, 23));
        buttonPanel.add(button25);

        JButton button26 = new JButton("<html><body><span>log<sub>10</sub></span></body></html>");
        button26.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        button26.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if(! "0".equals(textField.getText())) {
                    textField.setText(textField.getText()+"log(");
                }else {
                    textField.setText("log(");
                }
                expression+=",log,(";
                num=false;
                dot=false;
            }
        });
        buttonPanel.add(button26);

        JButton button27 = new JButton(".");
        button27.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String s=textField.getText();
                if(s.charAt(s.length()-1)!= '.') {
                    if(num && !dot) {
                        expression+=".";
                        s += ".";
                    }else if(!num && !dot){
                        expression+=",.";
                        s += ".";
                    }
                }
                num=true;
                dot=true;
                textField.setText(s);
            }
        });
        button27.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button27);

        JButton button28 = new JButton("0");
        button28.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if("0".equals(textField.getText())) {
                    textField.setText("0");
                }else {
                    textField.setText(textField.getText()+"0");
                    if(num) {
                        expression+="0";
                    }
                    else {
                        expression+=",0";
                    }
                }
                num=true;
            }
        });
        button28.setBackground(new Color(220, 220, 220));
        button28.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button28);


        //actual functioning on clicking = button
        JButton button29 = new JButton("=");
        button29.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                calculateMain();
                StringBuilder s= new StringBuilder();
                token.remove(token.size()-1);
                for(String i: token) {
                    switch (i) {
                        case "/" -> s.append((char) 247);
                        case "sqrt" -> s.append((char) 8730);
                        case "pi" -> s.append((char) 960);
                        default -> s.append(i);
                    }
                }
                expLabel.setText(s+"=");
                textField.setText(result);

                expression = result;
                dot=true;
                num=true;
                token.clear();
            }
        });
        button29.setBackground(Color.ORANGE);
        button29.setFont(new Font("Calibre Light", Font.PLAIN, 22));
        buttonPanel.add(button29);

        JButton button30 = new JButton("+");
        button30.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String s=textField.getText();
                if(s.equals("0")) {
                    expression+="0";
                }
                if(s.charAt(s.length()-1)== '-' || s.charAt(s.length()-1)== 'x' || s.charAt(s.length()-1) == (char)(247)) {
                    String newString = s.substring(0,s.length()-1);
                    newString += "+";
                    textField.setText(newString);
                    expression = expression.substring(0,expression.length()-1);
                    expression += "+";
                }else if(s.charAt(s.length()-1)!= '+') {
                    s += "+";
                    textField.setText(s);
                    expression+=",+";
                }else {
                    textField.setText(s);
                }
                num=false;
                dot=false;
            }
        });
        button30.setFont(new Font("Calibre Light", Font.PLAIN, 17));
        buttonPanel.add(button30);
        frmCalculator.setBounds(200, 100, 400, 500);
        frmCalculator.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
}
